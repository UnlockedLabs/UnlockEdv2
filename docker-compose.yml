services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: unlocked
      POSTGRES_USER: unlocked
      POSTGRES_PASSWORD: dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - config:/docker-entrypoint-initdb.d
    # command:
    #   > #  this feels kinda hacky: we have to log to a sub directory in a directory owned by the user :1000 so postgres doesn't complain
    #   postgres -c 'logging_collector=on' -c 'log_destination=jsonlog' -c 'log_directory=/docker-entrypoint-initdb.d/logs' -c log_line_prefix='%t [%u]'  -c 'log_connections=on' -c 'log_file_mode=0644' -c 'log_filename=postgres-%Y-%m-%d.log'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unlocked"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - intranet

  rev_proxy:
    build:
      context: config
      dockerfile: Dockerfile
    ports:
      - 80:80
    volumes:
      - ./config/be-dev.nginx.conf:/etc/nginx/conf.d/default.conf
      - logs:/var/log/nginx/
    networks:
      - intranet
    restart: "on-failure"
    depends_on:
      kratos-migrate:
        condition: service_completed_successfully
    extra_hosts:
      - "host.docker.internal:host-gateway"

  keto-migrate:
    image: oryd/keto:v0.12.0-alpha.0
    links:
      - postgres:postgres
    volumes:
      - config:/home/ory
    environment:
      - LOG_LEVEL=debug
      - DSN=postgres://keto:ChangeMe!@postgres:5432/accesscontroldb?sslmode=prefer&max_conns=20&max_idle_conns=4
    command: ["migrate", "up", "-y"]
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - intranet

  nats:
    image: nats:latest
    networks:
      - intranet
    ports:
      - 8222:8222
      - 4222:4222
    command: --js -c /config/nats-server.conf
    volumes:
      - config:/config
      - nats_data:/data

  keto:
    image: oryd/keto:v0.11.1-alpha.0
    links:
      - postgres:postgres
    volumes:
      - type: bind
        source: config
        target: /home/ory
    ports:
      - "4466:4466"
      - "4467:4467"
    depends_on:
      - keto-migrate
    environment:
      - DSN=postgres://keto:ChangeMe!@postgres:5432/accesscontroldb?sslmode=prefer&max_conns=20&max_idle_conns=4
    restart: on-failure
    networks:
      - intranet

  kratos-migrate:
    image: oryd/kratos:v1.1.0
    environment:
      - DSN=postgres://kratos:ChangeMe!@postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: ./config/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
    depends_on:
      postgres:
        condition: service_healthy

  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v1.1.0
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://kratos:ChangeMe!@postgres:5432/kratos?sslmode=prefer&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ./config/kratos
        target: /etc/config/kratos
    networks:
      - intranet

  hydra:
    image: oryd/hydra:v2.2.0
    ports:
      - "4444:4444"
      - "4445:4445"
      - "5555:5555"
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: bind
        source: ./config/hydra
        target: /etc/config/hydra
    environment:
      - LOG_LEVEL=debug
      - OAUTH2_EXPOSE_INTERNAL_ERRORS=1
      - SERVE_PUBLIC_CORS_ENABLED=true
      - SERVE_PUBLIC_CORS_ALLOWED_METHODS=POST,GET,PUT,DELETE
      - SERVE_ADMIN_CORS_ENABLED=true
      - SERVE_ADMIN_CORS_ALLOWED_METHODS=POST,GET,PUT,DELETE
      - DSN=postgres://hydra:ChangeMe!@postgres:5432/hydra?sslmode=prefer&max_conns=20&max_idle_conns=4
    restart: unless-stopped
    depends_on:
      - hydra-migrate
    networks:
      - intranet

  hydra-migrate:
    image: oryd/hydra:v2.2.0
    environment:
      - DSN=postgres://hydra:ChangeMe!@postgres:5432/hydra?sslmode=prefer&max_conns=20&max_idle_conns=4
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: bind
        source: ./config/hydra
        target: /etc/config/hydra
    restart: on-failure
    networks:
      - intranet
    depends_on:
      postgres:
        condition: service_healthy

networks:
  intranet:
    driver: bridge

volumes:
  nats_data:
  postgres_data:
  config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./config

  logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
