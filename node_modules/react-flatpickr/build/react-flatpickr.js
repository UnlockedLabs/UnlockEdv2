import { jsx as b } from "react/jsx-runtime";
import { useMemo as D, useRef as E, useImperativeHandle as F, useEffect as S, useCallback as v } from "react";
import w from "flatpickr";
const H = ["onCreate", "onDestroy"], k = [
  "onChange",
  "onOpen",
  "onClose",
  "onMonthChange",
  "onYearChange",
  "onReady",
  "onValueUpdate",
  "onDayCreate"
], R = (e, c) => (k.forEach((r) => {
  const o = c[r], n = e[r];
  if (o) {
    n && !Array.isArray(n) ? e[r] = [e[r]] : e[r] || (e[r] = []);
    const C = Array.isArray(o) ? o : [o];
    e[r].length === 0 ? e[r] = C : e[r].push(...C);
  }
}), k.forEach((r) => {
  delete c[r];
}), H.forEach((r) => {
  delete c[r];
}), e), M = (e) => {
  const c = D(() => ({ ...e }), [e]), { defaultValue: r, options: o = {}, value: n, children: C, render: u, onCreate: h, onDestroy: m } = c, g = D(() => R(o, c), [o, c]), l = E(null), t = E(void 0);
  F(
    e.ref,
    () => ({
      get flatpickr() {
        return t.current;
      }
    }),
    []
  ), S(() => {
    const i = () => {
      var a;
      g.onClose = g.onClose || (() => {
        var f;
        (f = l.current) != null && f.blur && l.current.blur();
      }), t.current = (((a = w) == null ? void 0 : a.default) || w)(l.current, g), h == null || h(t.current);
    }, s = () => {
      m == null || m(t.current), t.current && t.current.destroy(), t.current = void 0;
    };
    return i(), () => {
      s();
    };
  }, [g, h, m]), S(() => {
    var i;
    if (t.current) {
      const s = Object.getOwnPropertyNames(g);
      for (let a = s.length - 1; a >= 0; a--) {
        const f = s[a];
        let y = g[f];
        (y == null ? void 0 : y.toString()) !== ((i = t.current.config[f]) == null ? void 0 : i.toString()) && (k.includes(f) && !Array.isArray(y) && (y = [y]), t.current.set(f, y));
      }
      n !== void 0 && n !== t.current.input.value && t.current.setDate(n, !1);
    }
  }, [g, n]);
  const A = v((i) => {
    l.current = i;
  }, []);
  if (u)
    return u({ ...c, defaultValue: r, value: n }, A);
  const x = v(
    (i) => {
      var s, a;
      e && e.onChange && (Array.isArray(e == null ? void 0 : e.onChange) ? (s = e == null ? void 0 : e.onChange) == null || s.forEach(() => [new Date(i.target.value)], (n == null ? void 0 : n.toString()) || "") : typeof e.onChange == "function" && ((a = e == null ? void 0 : e.onChange) == null || a.call(e, [new Date(i.target.value)], (n == null ? void 0 : n.toString()) || "", t.current)));
    },
    [e, n]
  );
  return o.wrap ? /* @__PURE__ */ b("div", { className: "flatpickr", ref: A, children: C }) : /* @__PURE__ */ b(
    "input",
    {
      onChange: x,
      ...c,
      value: n == null ? void 0 : n.toString(),
      defaultValue: r,
      ref: A
    }
  );
};
export {
  M as default
};
//# sourceMappingURL=react-flatpickr.js.map
